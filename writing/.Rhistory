"0.01"=c(4,37,38),
"0.05"=c(12,20,37,44),
"0.2"=c(1,4,22,26)
)
risk.haplo.f <<- mean(apply(2-as.matrix(haplotype[, risk.variant.id+2]), 1, sum)>0) #carrier haplotype frequency
cat("risk.haplo.f = ", risk.haplo.f, "\n")
Beta <- rep(0, length.out=50)
Beta[risk.variant.id] <- log(r) #effect size of OR=2
p_dis=0.3
system.time(family_generated <<- gene_family_pe(family_strct=family_strct_ped, n_family=n_family, p_dis=p_dis, Beta=Beta))
system.time(family_generated <<- gene_family_pe(family_strct=family_strct_ped, n_family=n_family, p_dis=0.2, Beta=Beta))
x <- c(-2,-2,-2,4)
mean(x)
(x -mean(x))/4
sum(x -mean(x))/4
sum((x -mean(x)^2))/4
sum((x -mean(x))^2)/4
sum((x -mean(x))^2)/4
(x -mean(x))
sum((x -mean(x))^2)
sum((x -mean(x))^2)/4
x <- c(-2,-2,-2,6)
mean(x)
sum((x -mean(x))^2)/4
x <- c(-2,-2,12,-8)
mean(x)
sum((x -mean(x))^2)/4
12/sqrt(54)
6/sqrt(12)
4/sqrt(6.75)
4.5/6.75
6/12
12/54
4.5/sqrt(6.75)
6/sqrt(12)
12/sqrt(54)
4.5*2/sqrt(2*6.75)
12*2/sqrt(2*54)
4.5/sqrt(6.75)*2
12/sqrt(54)*2
3.46/sqrt(2)
3.26/sqrt(2)
x <- c(-4,-4,8,-4)
mean(x)
(x-mean(x))^2
sum((x-mean(x))^2)/4
bias_stat <- function(y=c(1,-1), x=c(1,-1)){
a <- y[2]*x[1] + y[1]*x[2] + y[1]*x[1] + y[1]*x[2]
b <- y[2]*x[1] + y[1]*x[2] + y[1]*x[2] + y[1]*x[1]
c <- y[2]*x[2] + y[1]*x[1] + y[1]*x[1] + y[1]*x[1]
d <- y[2]*x[2] + y[1]*x[1] + y[1]*x[2] + y[1]*x[2]
x <- c(a,b,c,d)
list(mu=mean(x), var=sum(x-(mean(x))^2)/4)
}
bias_stat()
bias_stat <- function(y=c(1,-1), x=c(1,-1)){
a <- y[2]*x[1] + y[1]*x[2] + y[1]*x[1] + y[1]*x[2]
b <- y[2]*x[1] + y[1]*x[2] + y[1]*x[2] + y[1]*x[1]
c <- y[2]*x[2] + y[1]*x[1] + y[1]*x[1] + y[1]*x[1]
d <- y[2]*x[2] + y[1]*x[1] + y[1]*x[2] + y[1]*x[2]
obs <- c(a,b,c,d)
list(mu=mean(obs), var=sum(obs-(mean(ons))^2)/4)
}
bias_stat()
bias_stat <- function(y=c(1,-1), x=c(1,-1)){
a <- y[2]*x[1] + y[1]*x[2] + y[1]*x[1] + y[1]*x[2]
b <- y[2]*x[1] + y[1]*x[2] + y[1]*x[2] + y[1]*x[1]
c <- y[2]*x[2] + y[1]*x[1] + y[1]*x[1] + y[1]*x[1]
d <- y[2]*x[2] + y[1]*x[1] + y[1]*x[2] + y[1]*x[2]
list(mu=mean(obs), var=sum(obs-(mean(obs))^2)/4)
}
obs <- c(a,b,c,d)
bias_stat <- function(y=c(1,-1), x=c(1,-1)){
a <- y[2]*x[1] + y[1]*x[2] + y[1]*x[1] + y[1]*x[2]
b <- y[2]*x[1] + y[1]*x[2] + y[1]*x[2] + y[1]*x[1]
c <- y[2]*x[2] + y[1]*x[1] + y[1]*x[1] + y[1]*x[1]
d <- y[2]*x[2] + y[1]*x[1] + y[1]*x[2] + y[1]*x[2]
obs <- c(a,b,c,d)
list(mu=mean(obs), var=sum(obs-(mean(obs))^2)/4)
}
bias_stat()
bias_stat <- function(y=c(1,-1), x=c(1,-1)){
a <- y[2]*x[1] + y[1]*x[2] + y[1]*x[1] + y[1]*x[2]
b <- y[2]*x[1] + y[1]*x[2] + y[1]*x[2] + y[1]*x[1]
c <- y[2]*x[2] + y[1]*x[1] + y[1]*x[1] + y[1]*x[1]
d <- y[2]*x[2] + y[1]*x[1] + y[1]*x[2] + y[1]*x[2]
obs <- c(a,b,c,d)
list(obs=obs, mu=mean(obs), var=sum(obs-(mean(obs))^2)/4)
}
bias_stat()
obs=c(-2,-2,0,4)
sum(obs-(mean(obs))^2)/4
bias_stat <- function(y=c(1,-1), x=c(1,-1)){
a <- y[2]*x[1] + y[1]*x[2] + y[1]*x[1] + y[1]*x[2]
b <- y[2]*x[1] + y[1]*x[2] + y[1]*x[2] + y[1]*x[1]
c <- y[2]*x[2] + y[1]*x[1] + y[1]*x[1] + y[1]*x[1]
d <- y[2]*x[2] + y[1]*x[1] + y[1]*x[2] + y[1]*x[2]
obs <- c(a,b,c,d)
list(obs=obs, mu=mean(obs), var=sum(obs-mean(obs))^2/4)
}
bias_stat()
bias_stat <- function(y=c(1,-1), x=c(1,-1)){
a <- y[2]*x[1] + y[1]*x[2] + y[1]*x[1] + y[1]*x[2]
b <- y[2]*x[1] + y[1]*x[2] + y[1]*x[2] + y[1]*x[1]
c <- y[2]*x[2] + y[1]*x[1] + y[1]*x[1] + y[1]*x[1]
d <- y[2]*x[2] + y[1]*x[1] + y[1]*x[2] + y[1]*x[2]
obs <- c(a,b,c,d)
list(obs=obs, mu=mean(obs), var=sum(obs-mean(obs)^2)/4)
}
bias_stat()
bias_stat <- function(y=c(1,-1), x=c(1,-1)){
a <- y[2]*x[1] + y[1]*x[2] + y[1]*x[1] + y[1]*x[2]
b <- y[2]*x[1] + y[1]*x[2] + y[1]*x[2] + y[1]*x[1]
c <- y[2]*x[2] + y[1]*x[1] + y[1]*x[1] + y[1]*x[1]
d <- y[2]*x[2] + y[1]*x[1] + y[1]*x[2] + y[1]*x[2]
obs <- c(a,b,c,d)
list(obs=obs, mu=mean(obs), var=sum((obs-mean(obs))^2)/4)
}
bias_stat()
bias_stat(y=c(2,-2))
bias_stat(y=c(2,0))
bias_stat(y=c(5,3))
2*4/sqrt(2*6)
2*12/sqrt(2*54)
2*6/sqrt(2*12)
bias_stat(y=c(10,8))
2*22/sqrt(2*204)
2*22/sqrt(2*204)
bias_stat(y=c(20,18))
2*42/sqrt(2*804)
2*42/sqrt(804)
2*42/sqrt(804)/sqrt(2)
bias_stat <- function(y=c(1,-1), x=c(1,-1)){
a <- y[2]*x[1] + y[1]*x[2] + y[1]*x[1] + y[1]*x[2]
b <- y[2]*x[1] + y[1]*x[2] + y[1]*x[2] + y[1]*x[1]
c <- y[2]*x[2] + y[1]*x[1] + y[1]*x[1] + y[1]*x[1]
d <- y[2]*x[2] + y[1]*x[1] + y[1]*x[2] + y[1]*x[2]
obs <- c(a,b,c,d)
mu <- mean(obs)
var <- sum((obs-mu)^2)/4
stat <- 2*(c-mu)/sqrt(2*var)
list(obs=obs, mu=mu, var=var, stat=stat)
}
bias_stat()
bias_stat(y=c(1,-1))
bias_stat(y=c(1,-1), x=(1,0))
bias_stat(y=c(10,8), x=c(1,0))
bias_stat(y=c(10,8))
bias_stat(y=c(1,-1))
bias_stat(y=c(1,-1), x=(1,0))
bias_stat(y=c(1,-1))
bias_stat(y=c(1,-1), x=(1,0))
bias_stat(y=c(1,-1))
bias_stat(y=c(1,-1), x=c(1,0))
bias_stat(y=c(10,8))
bias_stat(y=c(10,8), x=c(1,0))
bias_stat(y=c(10,8))
bias_stat(y=c(10,8), x=c(1,-2))
bias_stat(y=c(10,8), x=c(1,0))
bias_stat(y=c(10,8))
bias_stat(y=c(10,8), x=c(1,0))
bias_stat(y=c(1,-1))
bias_stat(y=c(10,8))
bias_stat(y=c(-8,-10))
bias_stat(y=c(8,10))
bias_stat(y=c(10,8))
bias_stat(y=c(100,98))
1000000
alpha=2.5*10^-6
alpha*(1-alpha)/sqrt(1000000)
alpha*(1-alpha)/sqrt(1000000)
alpha
alpha*(1-alpha)/sqrt(1000000)
sqrt(alpha*(1-alpha)/1000000)
sqrt(alpha*(1-alpha)/5000000)
bias_stat <- function(y=c(1,-1), x=c(1,-1)){
a <- y[2]*x[1] + y[1]*x[2] + y[1]*x[1] + y[1]*x[2]
b <- y[2]*x[1] + y[1]*x[2] + y[1]*x[2] + y[1]*x[1]
c <- y[2]*x[2] + y[1]*x[1] + y[1]*x[1] + y[1]*x[1]
d <- y[2]*x[2] + y[1]*x[1] + y[1]*x[2] + y[1]*x[2]
obs <- c(a,b,c,d)
mu <- mean(obs)
var <- sum((obs-mu)^2)/4
stat <- 2*(c-mu)/sqrt(2*var)
list(obs=obs, mu=mu, var=var, stat=stat)
}
bias_stat()
##
fn <- function(a, b) {
3*a^2 -2*a*b + b^2
}
fn <- Vectorize(fn)
fn(1:2, 2:3)
a <- seq(-10,-10, by=0.05)
b <- a-2
curve(function(a) fn(a, a-2), -10,10)
fn <- function(a, b) {
3*a^2 -2*a*b + b^2
}
fn <- Vectorize(fn)
a <- seq(-10,-10, by=0.05)
b <- a-2
curve(function(a) fn(a, a-2), -10,10)
fn <- function(a, b) {
3*a^2 -2*a*b + b^2
}
fn <- Vectorize(fn)
a <- seq(-10,-10, by=0.05)
b <- a-2
curve(function(a) fn(a, a-2), -10,10)
curve(function(x) fn(x, x-2), -10,10)
fn(1,-1)
fn <- function(a, b) {
3*a^2 -2*a*b + b^2
}
curve(function(x) fn(x, x-2), -10,10)
#find minimum
fn <- function(a, b) {
3*a^2 -2*a*b + b^2
}
fn <- Vectorize(fn)
a <- seq(-10,-10, by=0.05)
b <- a-2
curve(function(x) fn(x, x-2), -10,10)
fn(1:2,-1:0)
curve(function(x) fn(x, x-2), -10,10)
curve(sapply(x, function(x) fn(x, x-2)), -10,10)
curve(sapply(x, function(x) fn(x, x-2)), -10,10, xlab="a", ylab="variance")
t_fn <- function(a, b) {
(3*a-b)/(3*a^2 -2*a*b + b^2)
}
t_fn <- Vectorize(t_fn)
t_fn <- function(a, b) {
(3*a-b)/(3*a^2 -2*a*b + b^2)
}
t_fn <- Vectorize(t_fn)
curve(sapply(x, function(x) t_fn(x, x-2)), -10,10, xlab="a", ylab="signal/noise ratio")
abline(v=2)
abline(v=1)
t_fn(1, 1-2)
t_fn(0, 1-2)
t_fn(0.9, .9-2)
curve(sapply(x, function(x) t_fn(x, x-2)), -10,10, xlab="a", ylab="signal/noise ratio")
abline(v=1)
x_tick <- seq(-10, 10, by=1)
axis(1, at=x_tick)
curve(sapply(x, function(x) t_fn(x, x-2)), -10,10, xlab="a", ylab="signal/noise ratio")
abline(v=1)
x_tick <- seq(-10, 10, by=1)
axis(1, at=x_tick)
fn <- function(a, b) {
3*a^2 -2*a*b + b^2
}
fn <- Vectorize(fn)
curve(sapply(x, function(x) fn(x, x-2)), -10,10, xlab="a", ylab="variance", main="a-b=2")
curve(sapply(x, function(x) t_fn(x, x-2)), -10,10, xlab="a", ylab="signal/noise ratio", main="a-b=2")
abline(v=1)
x_tick <- seq(-10, 10, by=1)
axis(1, at=x_tick)
setwd("C:/Users/khlin/Dropbox/Documents/GSRA/2013-10-31 Project 3 -- Extension to families data/writing")
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#check power using true, imputed founder carrier, minimum offspring carrier
#three versions -- command and rare and super rare #2 for common, 7 for rare, 39 for super rare
result <- read.csv("Table 1. type I error_rare_2g.3a.1u_1M.csv", header=T)
names(result)
result <- result %>% gather(key="method", value="p.value", 7:13)
result.plot <- result %>% group_by(risk.variant, risk.haplo.f, r, method) %>%
summarise(n=n(), power=mean(p.value<2.5*10^-6, na.rm=T))
result.plot$risk.haplo.f <- factor(result.plot$risk.haplo.f, labels=c("f=0.0039","f=0.0178","f=0.202"))
pd <- position_dodge(0.0)
filter(result.plot, !grepl("vc", method)) %>% ggplot(aes(x=r, y=power, ymax=max(power), group=method, col=method)) +
#   geom_point(size=3, alpha=1) +
facet_wrap(~risk.haplo.f, ncol=3, scale="free_x") +
geom_line(size=1.2, alpha=0.7, position=pd) +
geom_point(size=1.2, position=pd) +
#   ggtitle("f=0.202, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0178, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0039, consider effect size of risk haplotypes, TRAP") +
labs(x="relative risk r") +
scale_y_continuous(limits=c(0,1)) +
theme_gray(base_size = 20) +
theme(legend.position="bottom", panel.background = element_rect(fill = 'grey85')) +
scale_color_manual(values=cbbPalette)
result.plot
as.data.frame(result.plot)
result <- read.csv("Table 1. type I error.csv", header=T)
names(result)
result <- result %>% gather(key="method", value="p.value", -c(1:8))
result.plot <- result %>% group_by(f, risk.haplo.f, r, method) %>%
summarise(n=n(), power=mean(p.value<2.5*10^-6, na.rm=T))
as.data.frame(result.plot)
result.plot <- result %>% group_by(f, risk.haplo.f, r, method) %>%
summarise(n=n(), power=mean(p.value<0.05, na.rm=T))
as.data.frame(result.plot)
result.plot <- result %>% group_by(f, risk.haplo.f, family_strct, r, method) %>%
summarise(n=n(), power=mean(p.value<0.05, na.rm=T))
as.data.frame(result.plot)
alpha
sqrt(alpha*(1-alpha)/1000000)
alpha <- 2.5*10^-4
sqrt(alpha*(1-alpha)/1000000)
result.plot <- result %>% group_by(f, risk.haplo.f, family_strct, r, method) %>%
summarise(n=n(), power=mean(p.value<2.5*10^-3, na.rm=T))
as.data.frame(result.plot)
result.plot <- result %>% group_by(f, risk.haplo.f, family_strct, r, method) %>%
summarise(n=n(), power=mean(p.value<2.5*10^-4, na.rm=T))
as.data.frame(result.plot)
alpha<-10^-5
sqrt(alpha*(1-alpha)/1000000)
alpha<-10^-4
alpha<-10^-6
sqrt(alpha*(1-alpha)/1000000)
sqrt(alpha*(1-alpha)/5000000)
sqrt(alpha*(1-alpha)/10000000)
sqrt(alpha*(1-alpha)/100000000)
result.plot <- result %>% group_by(f, risk.haplo.f, family_strct, r, method) %>%
summarise(n=n(), power=mean(p.value<2.5*10^-4, na.rm=T))
as.data.frame(result.plot)
result <- read.csv("figure 2. 2g 3g power comparison and frequecy at p_dis=0.1.csv", header=T, stringsAsFactors = F)
result <- result %>% gather(key="method", value="p.value", 9:14)
result$family_strct <- factor(result$family_strct, levels=c("2g.3a.1u", "3g.3a.4u",
"3g.2a.5u", "3g.3a.5u"))
result$method <- factor(result$method, levels=c("result.trap", "result.trafic.ext","result.pedgene.vc",
"result.pedgene.burden","result.fbskat.vc","result.fbskat.burden"),
labels = c("TRAP", "TRAFIC_EXT", "Pedgene.vc", "Pedgene.burden", "FB-SKAT.vc",
"FB-SKAT.burden"))
# result <- melt(id.vars=c("seed", "r", "p_dis","rish.haplo.f","n_family", ""), variable.name="", value.name="p.value")
result.plot <- result %>% group_by(r, family_strct, method) %>%
summarise(n=n(), power=mean(p.value < 2.5*10^-6))
#only TRAP and TRAFIC_EXT
filter(result.plot, grepl("TRAP|TRAFIC_EXT", method)) %>% ggplot(aes(x=r, y=power, col=family_strct)) +
facet_wrap(~method) +
#   geom_point(size=3, alpha=1) +
geom_line(size=1.2, alpha=0.7) +
ggtitle("f=0.01") +
labs(x="odds ratio r") +
theme_gray(base_size = 20) +
theme(legend.position="bottom", panel.background = element_rect(fill="grey85"))
##power comparison between
result <- read.csv("figure 2. 2g 3g power comparison and frequecy at p_dis=0.1.csv", header=T, stringsAsFactors = F)
result <- result %>% gather(key="method", value="p.value", 9:14)
result$family_strct <- factor(result$family_strct, levels=c("2g.3a.1u", "3g.3a.4u",
"3g.2a.5u", "3g.3a.5u"))
result$method <- factor(result$method, levels=c("result.trap", "result.trafic.ext","result.pedgene.vc",
"result.pedgene.burden","result.fbskat.vc","result.fbskat.burden"),
labels = c("TRAP", "TRAFIC_EXT", "Pedgene.vc", "Pedgene.burden", "FB-SKAT.vc",
"FB-SKAT.burden"))
# result <- melt(id.vars=c("seed", "r", "p_dis","rish.haplo.f","n_family", ""), variable.name="", value.name="p.value")
result.plot <- result %>% group_by(r, family_strct, method) %>%
summarise(n=n(), power=mean(p.value < 2.5*10^-6))
#only TRAP and TRAFIC_EXT
filter(result.plot, grepl("TRAP|TRAFIC_EXT", method)) %>% ggplot(aes(x=r, y=power, col=family_strct)) +
facet_wrap(~method) +
#   geom_point(size=3, alpha=1) +
geom_line(size=1.2, alpha=0.7) +
ggtitle("f=0.01") +
labs(x="odds ratio r") +
theme_gray(base_size = 20) +
theme(legend.position="bottom", panel.background = element_rect(fill="grey85"))
result.plot
filter(result.plot, r==2.3)
as.data.frame(filter(result.plot, r==2.3))
as.data.frame(filter(result.plot, r==2))
# The color-blind friednly palette
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#check power using true, imputed founder carrier, minimum offspring carrier
#three versions -- command and rare and super rare #2 for common, 7 for rare, 39 for super rare
alpha=2.5*10^-6
result <- read.csv("figure 3. use between family info in founders.csv", header=T)
result <- result %>% gather(key="method", value="p.value", 9:14)
result.plot <- result %>% group_by(f, risk.variant.id, risk.haplo.f, r, method) %>%
summarise(n=n(), power=mean(p.value<alpha, na.rm=T))
# result.plot$risk.haplo.f <- factor(result.plot$risk.haplo.f, labels=c("f=0.0062","f=0.0116","f=0.2135"))
result.plot <- mutate(result.plot, method_kind=ifelse(grepl("trap", method), "TRAP", "TRAFIC_EXT"))
result.plot$method_kind <- factor(result.plot$method_kind, levels=c("TRAP", "TRAFIC_EXT"), labels = c("TRAP", "TRAFIC_EXT"))
result.plot <- mutate(result.plot, type=ifelse(grepl("pop", method), "combined", ifelse(grepl("noimpute", method), "within", "between")))
result.plot$type <- factor(result.plot$type, levels=c("combined", "between", "within"))
#test
pd <- position_dodge(0.0)
filter(result.plot) %>% ggplot(aes(x=r, y=power, ymax=max(power), group=method, col=type)) +
#   geom_point(size=3, alpha=1) +
facet_grid(method_kind~f, scales = "free_x") +
geom_line(size=1.2, alpha=0.7, position=pd) +
geom_point(size=1.2, position=pd) +
#   ggtitle("f=0.202, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0178, consider effect size of risk haplotypes, TRAP") +
# ggtitle("f=0.01") +
labs(x="odds ratio r") +
coord_cartesian(ylim = c(0,1.02)) +
theme_gray(base_size = 20) +
theme(legend.position="right", panel.background = element_rect(fill = 'grey85')) +
scale_color_manual(values=cbbPalette)
friednly palette
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#check power using true, imputed founder carrier, minimum offspring carrier
#three versions -- command and rare and super rare #2 for common, 7 for rare, 39 for super rare
result <- read.csv("2015-11-09 TRAP with unaffected - 2g.2a.2u.csv", header=T)
result <- result %>% gather(key="method", value="p.value", 8:10)
result.plot <- result %>% group_by(risk.variant,p_dis,risk.haplo.f, r, method) %>%
summarise(n=n(), power=mean(p.value<0.05))
result.plot$risk.haplo.f <- factor(result.plot$risk.haplo.f, labels=c("f=0.0062", "f=0.2135")) #,"f=0.0116","f=0.2135"
result.plot$p_dis <- factor(result.plot$p_dis, labels=c("p_dis=0.1", "p_dis=0.3"))
result.plot$method
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#check power using true, imputed founder carrier, minimum offspring carrier
#three versions -- command and rare and super rare #2 for common, 7 for rare, 39 for super rare
result <- read.csv("appendix figure 1. TRAP with unaffected.csv", header=T)
result <- result %>% gather(key="method", value="p.value", 8:10)
result.plot <- result %>% group_by(risk.variant,p_dis,risk.haplo.f, r, method) %>%
summarise(n=n(), power=mean(p.value<0.05))
result.plot$risk.haplo.f <- factor(result.plot$risk.haplo.f, labels=c("f=0.0062", "f=0.2135")) #,"f=0.0116","f=0.2135"
result.plot$p_dis <- factor(result.plot$p_dis, labels=c("p_dis=0.1", "p_dis=0.3"))
result.plot$method
factor(result.plot$method)
levels(factor(result.plot$method))
result.plot$method <- factor(result.plot$method, labels=c("affected only", "both affected and unaffected")
result.plot$method <- factor(result.plot$method, labels=c("affected only", "both affected and unaffected"))
result.plot$method <- factor(result.plot$method, labels=c("affected only", "both affected and unaffected"))
result.plot$method <- factor(result.plot$method, labels=c("affected only", "both affected and unaffected", "drop"))
pd <- position_dodge(0.0)
filter(result.plot, !grepl("drop", method)) %>% ggplot(aes(x=r, y=power, ymax=max(power), group=method, col=method)) +
#   geom_point(size=3, alpha=1) +
facet_grid(p_dis ~ risk.haplo.f) +
geom_line(size=1.2, alpha=0.7, position=pd) +
geom_point(size=1.2, position=pd) +
#   ggtitle("f=0.202, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0178, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0039, consider effect size of risk haplotypes, TRAP") +
labs(x="Odds Ratio") +
coord_cartesian(ylim=c(0,1)) +
theme_gray(base_size = 20) +
theme(legend.position="bottom", panel.background = element_rect(fill = 'grey85')) +
scale_color_manual(values=cbbPalette)
pd <- position_dodge(0.0)
filter(result.plot, !grepl("drop", method)) %>% ggplot(aes(x=r, y=power, ymax=max(power), group=method, col=method)) +
#   geom_point(size=3, alpha=1) +
facet_grid(p_dis ~ risk.haplo.f) +
geom_line(size=1.2, alpha=0.7, position=pd) +
geom_point(size=1.2, position=pd) +
#   ggtitle("f=0.202, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0178, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0039, consider effect size of risk haplotypes, TRAP") +
labs(x="odds ratio") +
coord_cartesian(ylim=c(0,1)) +
theme_gray(base_size = 20) +
theme(legend.position="bottom", panel.background = element_rect(fill = 'grey85')) +
scale_color_manual(values=cbbPalette)
# The color-blind friednly palette
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#check power using true, imputed founder carrier, minimum offspring carrier
#three versions -- command and rare and super rare #2 for common, 7 for rare, 39 for super rare
result <- read.csv("figure 1. correct trap and trafic_ext compare with pedgene, cc, and fbat_ext 2g2c_at p_dis0.1.csv", header=T)
result <- result %>% gather(key="method", value="p.value", 9:15)
result.plot <- result %>% group_by(f, risk.variant.id, risk.haplo.f, r, method) %>%
summarise(n=n(), power=mean(p.value<2.5*10^-6, na.rm=T))
result.plot$risk.haplo.f <- factor(result.plot$risk.haplo.f, labels=c("f=0.01","f=0.05","f=0.20"))
result.plot$method <- factor(result.plot$method, levels=c("result.trap", "result.trafic.ext", "result.pedgene.vc",
"result.pedgene.burden","result.fbskat.vc","result.fbskat.burden","result.cc"),
labels = c("TRAP", "TRAFIC_EXT", "Pedgene.vc", "Pedgene", "FB-SKAT.vc", "FB-SKAT","CC"))
#figure 1
pd <- position_dodge(0.0)
filter(result.plot, !grepl("vc", method)) %>% ggplot(aes(x=r, y=power, ymax=max(power), group=method, col=method)) +
#   geom_point(size=3, alpha=1) +
facet_wrap(~risk.haplo.f, ncol=3, scale="free_x") +
geom_line(size=1.2, alpha=0.7, position=pd) +
geom_point(size=1.2, position=pd) +
#   ggtitle("f=0.202, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0178, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0039, consider effect size of risk haplotypes, TRAP") +
labs(x="odds ratio r") +
scale_y_continuous(limits=c(0,1)) +
theme_gray(base_size = 20) +
theme(legend.position="bottom", panel.background = element_rect(fill = 'grey85')) +
scale_color_manual(values=cbbPalette)
filter(result.plot, r==2.4, f==0.01)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#check power using true, imputed founder carrier, minimum offspring carrier
#three versions -- command and rare and super rare #2 for common, 7 for rare, 39 for super rare
result <- read.csv("appendix figure 1. TRAP with unaffected.csv", header=T)
result <- result %>% gather(key="method", value="p.value", 8:10)
result.plot <- result %>% group_by(risk.variant,p_dis,risk.haplo.f, r, method) %>%
summarise(n=n(), power=mean(p.value<0.05))
result.plot$risk.haplo.f <- factor(result.plot$risk.haplo.f, labels=c("f=0.0062", "f=0.2135")) #,"f=0.0116","f=0.2135"
result.plot$p_dis <- factor(result.plot$p_dis, labels=c("p_dis=0.1", "p_dis=0.3"))
result.plot$method <- factor(result.plot$method, labels=c("affected only", "both affected and unaffected", "drop"))
#
pd <- position_dodge(0.0)
filter(result.plot, !grepl("drop", method)) %>% ggplot(aes(x=r, y=power, ymax=max(power), group=method, col=method)) +
#   geom_point(size=3, alpha=1) +
facet_grid(p_dis ~ risk.haplo.f) +
geom_line(size=1.2, alpha=0.7, position=pd) +
geom_point(size=1.2, position=pd) +
#   ggtitle("f=0.202, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0178, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0039, consider effect size of risk haplotypes, TRAP") +
labs(x="odds ratio") +
coord_cartesian(ylim=c(0,1)) +
theme_gray(base_size = 20) +
theme(legend.position="bottom", panel.background = element_rect(fill = 'grey85')) +
scale_color_manual(values=cbbPalette)
