scale_y_continuous(limits=c(0,1)) +
theme_gray(base_size = 20) +
theme(legend.position="bottom", panel.background = element_rect(fill = 'grey85')) +
scale_color_manual(values=cbbPalette)
result.plot
as.data.frame(result.plot)
result <- read.csv("Table 1. type I error.csv", header=T)
names(result)
result <- result %>% gather(key="method", value="p.value", -c(1:8))
result.plot <- result %>% group_by(f, risk.haplo.f, r, method) %>%
summarise(n=n(), power=mean(p.value<2.5*10^-6, na.rm=T))
as.data.frame(result.plot)
result.plot <- result %>% group_by(f, risk.haplo.f, r, method) %>%
summarise(n=n(), power=mean(p.value<0.05, na.rm=T))
as.data.frame(result.plot)
result.plot <- result %>% group_by(f, risk.haplo.f, family_strct, r, method) %>%
summarise(n=n(), power=mean(p.value<0.05, na.rm=T))
as.data.frame(result.plot)
alpha
sqrt(alpha*(1-alpha)/1000000)
alpha <- 2.5*10^-4
sqrt(alpha*(1-alpha)/1000000)
result.plot <- result %>% group_by(f, risk.haplo.f, family_strct, r, method) %>%
summarise(n=n(), power=mean(p.value<2.5*10^-3, na.rm=T))
as.data.frame(result.plot)
result.plot <- result %>% group_by(f, risk.haplo.f, family_strct, r, method) %>%
summarise(n=n(), power=mean(p.value<2.5*10^-4, na.rm=T))
as.data.frame(result.plot)
alpha<-10^-5
sqrt(alpha*(1-alpha)/1000000)
alpha<-10^-4
alpha<-10^-6
sqrt(alpha*(1-alpha)/1000000)
sqrt(alpha*(1-alpha)/5000000)
sqrt(alpha*(1-alpha)/10000000)
sqrt(alpha*(1-alpha)/100000000)
result.plot <- result %>% group_by(f, risk.haplo.f, family_strct, r, method) %>%
summarise(n=n(), power=mean(p.value<2.5*10^-4, na.rm=T))
as.data.frame(result.plot)
result <- read.csv("figure 2. 2g 3g power comparison and frequecy at p_dis=0.1.csv", header=T, stringsAsFactors = F)
result <- result %>% gather(key="method", value="p.value", 9:14)
result$family_strct <- factor(result$family_strct, levels=c("2g.3a.1u", "3g.3a.4u",
"3g.2a.5u", "3g.3a.5u"))
result$method <- factor(result$method, levels=c("result.trap", "result.trafic.ext","result.pedgene.vc",
"result.pedgene.burden","result.fbskat.vc","result.fbskat.burden"),
labels = c("TRAP", "TRAFIC_EXT", "Pedgene.vc", "Pedgene.burden", "FB-SKAT.vc",
"FB-SKAT.burden"))
# result <- melt(id.vars=c("seed", "r", "p_dis","rish.haplo.f","n_family", ""), variable.name="", value.name="p.value")
result.plot <- result %>% group_by(r, family_strct, method) %>%
summarise(n=n(), power=mean(p.value < 2.5*10^-6))
#only TRAP and TRAFIC_EXT
filter(result.plot, grepl("TRAP|TRAFIC_EXT", method)) %>% ggplot(aes(x=r, y=power, col=family_strct)) +
facet_wrap(~method) +
#   geom_point(size=3, alpha=1) +
geom_line(size=1.2, alpha=0.7) +
ggtitle("f=0.01") +
labs(x="odds ratio r") +
theme_gray(base_size = 20) +
theme(legend.position="bottom", panel.background = element_rect(fill="grey85"))
##power comparison between
result <- read.csv("figure 2. 2g 3g power comparison and frequecy at p_dis=0.1.csv", header=T, stringsAsFactors = F)
result <- result %>% gather(key="method", value="p.value", 9:14)
result$family_strct <- factor(result$family_strct, levels=c("2g.3a.1u", "3g.3a.4u",
"3g.2a.5u", "3g.3a.5u"))
result$method <- factor(result$method, levels=c("result.trap", "result.trafic.ext","result.pedgene.vc",
"result.pedgene.burden","result.fbskat.vc","result.fbskat.burden"),
labels = c("TRAP", "TRAFIC_EXT", "Pedgene.vc", "Pedgene.burden", "FB-SKAT.vc",
"FB-SKAT.burden"))
# result <- melt(id.vars=c("seed", "r", "p_dis","rish.haplo.f","n_family", ""), variable.name="", value.name="p.value")
result.plot <- result %>% group_by(r, family_strct, method) %>%
summarise(n=n(), power=mean(p.value < 2.5*10^-6))
#only TRAP and TRAFIC_EXT
filter(result.plot, grepl("TRAP|TRAFIC_EXT", method)) %>% ggplot(aes(x=r, y=power, col=family_strct)) +
facet_wrap(~method) +
#   geom_point(size=3, alpha=1) +
geom_line(size=1.2, alpha=0.7) +
ggtitle("f=0.01") +
labs(x="odds ratio r") +
theme_gray(base_size = 20) +
theme(legend.position="bottom", panel.background = element_rect(fill="grey85"))
result.plot
filter(result.plot, r==2.3)
as.data.frame(filter(result.plot, r==2.3))
as.data.frame(filter(result.plot, r==2))
# The color-blind friednly palette
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#check power using true, imputed founder carrier, minimum offspring carrier
#three versions -- command and rare and super rare #2 for common, 7 for rare, 39 for super rare
alpha=2.5*10^-6
result <- read.csv("figure 3. use between family info in founders.csv", header=T)
result <- result %>% gather(key="method", value="p.value", 9:14)
result.plot <- result %>% group_by(f, risk.variant.id, risk.haplo.f, r, method) %>%
summarise(n=n(), power=mean(p.value<alpha, na.rm=T))
# result.plot$risk.haplo.f <- factor(result.plot$risk.haplo.f, labels=c("f=0.0062","f=0.0116","f=0.2135"))
result.plot <- mutate(result.plot, method_kind=ifelse(grepl("trap", method), "TRAP", "TRAFIC_EXT"))
result.plot$method_kind <- factor(result.plot$method_kind, levels=c("TRAP", "TRAFIC_EXT"), labels = c("TRAP", "TRAFIC_EXT"))
result.plot <- mutate(result.plot, type=ifelse(grepl("pop", method), "combined", ifelse(grepl("noimpute", method), "within", "between")))
result.plot$type <- factor(result.plot$type, levels=c("combined", "between", "within"))
#test
pd <- position_dodge(0.0)
filter(result.plot) %>% ggplot(aes(x=r, y=power, ymax=max(power), group=method, col=type)) +
#   geom_point(size=3, alpha=1) +
facet_grid(method_kind~f, scales = "free_x") +
geom_line(size=1.2, alpha=0.7, position=pd) +
geom_point(size=1.2, position=pd) +
#   ggtitle("f=0.202, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0178, consider effect size of risk haplotypes, TRAP") +
# ggtitle("f=0.01") +
labs(x="odds ratio r") +
coord_cartesian(ylim = c(0,1.02)) +
theme_gray(base_size = 20) +
theme(legend.position="right", panel.background = element_rect(fill = 'grey85')) +
scale_color_manual(values=cbbPalette)
friednly palette
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#check power using true, imputed founder carrier, minimum offspring carrier
#three versions -- command and rare and super rare #2 for common, 7 for rare, 39 for super rare
result <- read.csv("2015-11-09 TRAP with unaffected - 2g.2a.2u.csv", header=T)
result <- result %>% gather(key="method", value="p.value", 8:10)
result.plot <- result %>% group_by(risk.variant,p_dis,risk.haplo.f, r, method) %>%
summarise(n=n(), power=mean(p.value<0.05))
result.plot$risk.haplo.f <- factor(result.plot$risk.haplo.f, labels=c("f=0.0062", "f=0.2135")) #,"f=0.0116","f=0.2135"
result.plot$p_dis <- factor(result.plot$p_dis, labels=c("p_dis=0.1", "p_dis=0.3"))
result.plot$method
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#check power using true, imputed founder carrier, minimum offspring carrier
#three versions -- command and rare and super rare #2 for common, 7 for rare, 39 for super rare
result <- read.csv("appendix figure 1. TRAP with unaffected.csv", header=T)
result <- result %>% gather(key="method", value="p.value", 8:10)
result.plot <- result %>% group_by(risk.variant,p_dis,risk.haplo.f, r, method) %>%
summarise(n=n(), power=mean(p.value<0.05))
result.plot$risk.haplo.f <- factor(result.plot$risk.haplo.f, labels=c("f=0.0062", "f=0.2135")) #,"f=0.0116","f=0.2135"
result.plot$p_dis <- factor(result.plot$p_dis, labels=c("p_dis=0.1", "p_dis=0.3"))
result.plot$method
factor(result.plot$method)
levels(factor(result.plot$method))
result.plot$method <- factor(result.plot$method, labels=c("affected only", "both affected and unaffected")
result.plot$method <- factor(result.plot$method, labels=c("affected only", "both affected and unaffected"))
result.plot$method <- factor(result.plot$method, labels=c("affected only", "both affected and unaffected"))
result.plot$method <- factor(result.plot$method, labels=c("affected only", "both affected and unaffected", "drop"))
pd <- position_dodge(0.0)
filter(result.plot, !grepl("drop", method)) %>% ggplot(aes(x=r, y=power, ymax=max(power), group=method, col=method)) +
#   geom_point(size=3, alpha=1) +
facet_grid(p_dis ~ risk.haplo.f) +
geom_line(size=1.2, alpha=0.7, position=pd) +
geom_point(size=1.2, position=pd) +
#   ggtitle("f=0.202, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0178, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0039, consider effect size of risk haplotypes, TRAP") +
labs(x="Odds Ratio") +
coord_cartesian(ylim=c(0,1)) +
theme_gray(base_size = 20) +
theme(legend.position="bottom", panel.background = element_rect(fill = 'grey85')) +
scale_color_manual(values=cbbPalette)
pd <- position_dodge(0.0)
filter(result.plot, !grepl("drop", method)) %>% ggplot(aes(x=r, y=power, ymax=max(power), group=method, col=method)) +
#   geom_point(size=3, alpha=1) +
facet_grid(p_dis ~ risk.haplo.f) +
geom_line(size=1.2, alpha=0.7, position=pd) +
geom_point(size=1.2, position=pd) +
#   ggtitle("f=0.202, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0178, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0039, consider effect size of risk haplotypes, TRAP") +
labs(x="odds ratio") +
coord_cartesian(ylim=c(0,1)) +
theme_gray(base_size = 20) +
theme(legend.position="bottom", panel.background = element_rect(fill = 'grey85')) +
scale_color_manual(values=cbbPalette)
# The color-blind friednly palette
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#check power using true, imputed founder carrier, minimum offspring carrier
#three versions -- command and rare and super rare #2 for common, 7 for rare, 39 for super rare
result <- read.csv("figure 1. correct trap and trafic_ext compare with pedgene, cc, and fbat_ext 2g2c_at p_dis0.1.csv", header=T)
result <- result %>% gather(key="method", value="p.value", 9:15)
result.plot <- result %>% group_by(f, risk.variant.id, risk.haplo.f, r, method) %>%
summarise(n=n(), power=mean(p.value<2.5*10^-6, na.rm=T))
result.plot$risk.haplo.f <- factor(result.plot$risk.haplo.f, labels=c("f=0.01","f=0.05","f=0.20"))
result.plot$method <- factor(result.plot$method, levels=c("result.trap", "result.trafic.ext", "result.pedgene.vc",
"result.pedgene.burden","result.fbskat.vc","result.fbskat.burden","result.cc"),
labels = c("TRAP", "TRAFIC_EXT", "Pedgene.vc", "Pedgene", "FB-SKAT.vc", "FB-SKAT","CC"))
#figure 1
pd <- position_dodge(0.0)
filter(result.plot, !grepl("vc", method)) %>% ggplot(aes(x=r, y=power, ymax=max(power), group=method, col=method)) +
#   geom_point(size=3, alpha=1) +
facet_wrap(~risk.haplo.f, ncol=3, scale="free_x") +
geom_line(size=1.2, alpha=0.7, position=pd) +
geom_point(size=1.2, position=pd) +
#   ggtitle("f=0.202, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0178, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0039, consider effect size of risk haplotypes, TRAP") +
labs(x="odds ratio r") +
scale_y_continuous(limits=c(0,1)) +
theme_gray(base_size = 20) +
theme(legend.position="bottom", panel.background = element_rect(fill = 'grey85')) +
scale_color_manual(values=cbbPalette)
filter(result.plot, r==2.4, f==0.01)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#check power using true, imputed founder carrier, minimum offspring carrier
#three versions -- command and rare and super rare #2 for common, 7 for rare, 39 for super rare
result <- read.csv("appendix figure 1. TRAP with unaffected.csv", header=T)
result <- result %>% gather(key="method", value="p.value", 8:10)
result.plot <- result %>% group_by(risk.variant,p_dis,risk.haplo.f, r, method) %>%
summarise(n=n(), power=mean(p.value<0.05))
result.plot$risk.haplo.f <- factor(result.plot$risk.haplo.f, labels=c("f=0.0062", "f=0.2135")) #,"f=0.0116","f=0.2135"
result.plot$p_dis <- factor(result.plot$p_dis, labels=c("p_dis=0.1", "p_dis=0.3"))
result.plot$method <- factor(result.plot$method, labels=c("affected only", "both affected and unaffected", "drop"))
#
pd <- position_dodge(0.0)
filter(result.plot, !grepl("drop", method)) %>% ggplot(aes(x=r, y=power, ymax=max(power), group=method, col=method)) +
#   geom_point(size=3, alpha=1) +
facet_grid(p_dis ~ risk.haplo.f) +
geom_line(size=1.2, alpha=0.7, position=pd) +
geom_point(size=1.2, position=pd) +
#   ggtitle("f=0.202, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0178, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0039, consider effect size of risk haplotypes, TRAP") +
labs(x="odds ratio") +
coord_cartesian(ylim=c(0,1)) +
theme_gray(base_size = 20) +
theme(legend.position="bottom", panel.background = element_rect(fill = 'grey85')) +
scale_color_manual(values=cbbPalette)
setwd("C:/Users/khlin/Dropbox/Documents/GSRA/2013-10-31 Project 3 -- Extension to families data/writing")
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#check power using true, imputed founder carrier, minimum offspring carrier
#three versions -- command and rare and super rare #2 for common, 7 for rare, 39 for super rare
result <- read.csv("allResults.csv", header=T)
result <- result %>% gather(key="method", value="p.value", 9:15)
result.plot <- result %>% group_by(f, risk.variant.id, risk.haplo.f, r, method) %>%
summarise(n=n(), power=mean(p.value<2.5*10^-6, na.rm=T))
result.plot$risk.haplo.f <- factor(result.plot$risk.haplo.f, labels=c("f=0.01","f=0.05","f=0.20"))
result.plot$method <- factor(result.plot$method, levels=c("result.trap", "result.trafic.ext", "result.pedgene.vc",
"result.pedgene.burden","result.fbskat.vc","result.fbskat.burden","result.cc"),
labels = c("TRAP", "TRAFIC_EXT", "Pedgene.vc", "Pedgene", "FB-SKAT.vc", "FB-SKAT","CC"))
#figure 1
pd <- position_dodge(0.0)
filter(result.plot, !grepl("vc", method)) %>% ggplot(aes(x=r, y=power, ymax=max(power), group=method, col=method)) +
#   geom_point(size=3, alpha=1) +
facet_wrap(~risk.haplo.f, ncol=3, scale="free_x") +
geom_line(size=1.2, alpha=0.7, position=pd) +
geom_point(size=1.2, position=pd) +
#   ggtitle("f=0.202, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0178, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0039, consider effect size of risk haplotypes, TRAP") +
labs(x="odds ratio r") +
scale_y_continuous(limits=c(0,1)) +
theme_gray(base_size = 20) +
theme(legend.position="bottom", panel.background = element_rect(fill = 'grey85')) +
scale_color_manual(values=cbbPalette)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#check power using true, imputed founder carrier, minimum offspring carrier
#three versions -- command and rare and super rare #2 for common, 7 for rare, 39 for super rare
result <- read.csv("figure 1. correct trap and trafic_ext compare with pedgene, cc, and fbat_ext 2g2c_at p_dis0.1.csv", header=T)
result <- result %>% gather(key="method", value="p.value", 9:15)
result.plot <- result %>% group_by(f, risk.variant.id, risk.haplo.f, r, method) %>%
summarise(n=n(), power=mean(p.value<2.5*10^-6, na.rm=T))
result.plot$risk.haplo.f <- factor(result.plot$risk.haplo.f, labels=c("f=0.01","f=0.05","f=0.20"))
result.plot$method <- factor(result.plot$method, levels=c("result.trap", "result.trafic.ext", "result.pedgene.vc",
"result.pedgene.burden","result.fbskat.vc","result.fbskat.burden","result.cc"),
labels = c("TRAP", "TRAFIC_EXT", "Pedgene.vc", "Pedgene", "FB-SKAT.vc", "FB-SKAT","CC"))
#figure 1
pd <- position_dodge(0.0)
filter(result.plot, !grepl("vc", method)) %>% ggplot(aes(x=r, y=power, ymax=max(power), group=method, col=method)) +
#   geom_point(size=3, alpha=1) +
facet_wrap(~risk.haplo.f, ncol=3, scale="free_x") +
geom_line(size=1.2, alpha=0.7, position=pd) +
geom_point(size=1.2, position=pd) +
#   ggtitle("f=0.202, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0178, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0039, consider effect size of risk haplotypes, TRAP") +
labs(x="odds ratio r") +
scale_y_continuous(limits=c(0,1)) +
theme_gray(base_size = 20) +
theme(legend.position="bottom", panel.background = element_rect(fill = 'grey85')) +
scale_color_manual(values=cbbPalette)
setwd("C:/Users/khlin/Dropbox/Documents/GSRA/2013-10-31 Project 3 -- Extension to families data")
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#check power using true, imputed founder carrier, minimum offspring carrier
#three versions -- command and rare and super rare #2 for common, 7 for rare, 39 for super rare
result <- read.csv("figure 1. correct trap and trafic_ext compare with pedgene, cc, and fbat_ext 2g2c_at p_dis0.1.csv", header=T)
result <- result %>% gather(key="method", value="p.value", 9:15)
result.plot <- result %>% group_by(f, risk.variant.id, risk.haplo.f, r, method) %>%
summarise(n=n(), power=mean(p.value<2.5*10^-6, na.rm=T))
result.plot$risk.haplo.f <- factor(result.plot$risk.haplo.f, labels=c("f=0.01","f=0.05","f=0.20"))
result.plot$method <- factor(result.plot$method, levels=c("result.trap", "result.trafic.ext", "result.pedgene.vc",
"result.pedgene.burden","result.fbskat.vc","result.fbskat.burden","result.cc"),
labels = c("TRAP", "TRAFIC_EXT", "Pedgene.vc", "Pedgene", "FB-SKAT.vc", "FB-SKAT","CC"))
#figure 1
pd <- position_dodge(0.0)
filter(result.plot, !grepl("vc", method)) %>% ggplot(aes(x=r, y=power, ymax=max(power), group=method, col=method)) +
#   geom_point(size=3, alpha=1) +
facet_wrap(~risk.haplo.f, ncol=3, scale="free_x") +
geom_line(size=1.2, alpha=0.7, position=pd) +
geom_point(size=1.2, position=pd) +
#   ggtitle("f=0.202, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0178, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0039, consider effect size of risk haplotypes, TRAP") +
labs(x="odds ratio r") +
scale_y_continuous(limits=c(0,1)) +
theme_gray(base_size = 20) +
theme(legend.position="bottom", panel.background = element_rect(fill = 'grey85')) +
scale_color_manual(values=cbbPalette)
setwd("C:/Users/khlin/Dropbox/Documents/GSRA/2013-10-31 Project 3 -- Extension to families data")
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#check power using true, imputed founder carrier, minimum offspring carrier
#three versions -- command and rare and super rare #2 for common, 7 for rare, 39 for super rare
result <- read.csv("figure 1. correct trap and trafic_ext compare with pedgene, cc, and fbat_ext 2g2c_at p_dis0.1.csv", header=T)
result <- result %>% gather(key="method", value="p.value", 9:15)
result.plot <- result %>% group_by(f, risk.variant.id, risk.haplo.f, r, method) %>%
summarise(n=n(), power=mean(p.value<2.5*10^-6, na.rm=T))
result.plot$risk.haplo.f <- factor(result.plot$risk.haplo.f, labels=c("f=0.01","f=0.05","f=0.20"))
result.plot$method <- factor(result.plot$method, levels=c("result.trap", "result.trafic.ext", "result.pedgene.vc",
"result.pedgene.burden","result.fbskat.vc","result.fbskat.burden","result.cc"),
labels = c("TRAP", "TRAFIC_EXT", "Pedgene.vc", "Pedgene", "FB-SKAT.vc", "FB-SKAT","CC"))
#figure 1
pd <- position_dodge(0.0)
filter(result.plot, !grepl("vc", method)) %>% ggplot(aes(x=r, y=power, ymax=max(power), group=method, col=method)) +
#   geom_point(size=3, alpha=1) +
facet_wrap(~risk.haplo.f, ncol=3, scale="free_x") +
geom_line(size=1.2, alpha=0.7, position=pd) +
geom_point(size=1.2, position=pd) +
#   ggtitle("f=0.202, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0178, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0039, consider effect size of risk haplotypes, TRAP") +
labs(x="odds ratio r") +
scale_y_continuous(limits=c(0,1)) +
theme_gray(base_size = 20) +
theme(legend.position="bottom", panel.background = element_rect(fill = 'grey85')) +
scale_color_manual(values=cbbPalette)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#check power using true, imputed founder carrier, minimum offspring carrier
#three versions -- command and rare and super rare #2 for common, 7 for rare, 39 for super rare
result <- read.csv("2016-02-16 power comparison using number of affected in 2g.2a.2u.csv", header=T)
result <- result %>% gather(key="method", value="p.value", 9:15)
result.plot <- result %>% group_by(f, risk.variant.id, risk.haplo.f, r, method) %>%
summarise(n=n(), power=mean(p.value<2.5*10^-6, na.rm=T))
result.plot$risk.haplo.f <- factor(result.plot$risk.haplo.f, labels=c("f=0.01","f=0.05","f=0.20"))
result.plot$method <- factor(result.plot$method, levels=c("result.trap", "result.trafic.ext", "result.pedgene.vc",
"result.pedgene.burden","result.fbskat.vc","result.fbskat.burden","result.cc"),
labels = c("TRAP", "TRAFIC_EXT", "Pedgene.vc", "Pedgene", "FB-SKAT.vc", "FB-SKAT","CC"))
#figure 1
pd <- position_dodge(0.0)
filter(result.plot, !grepl("vc", method)) %>% ggplot(aes(x=r, y=power, ymax=max(power), group=method, col=method)) +
#   geom_point(size=3, alpha=1) +
facet_wrap(~risk.haplo.f, ncol=3, scale="free_x") +
geom_line(size=1.2, alpha=0.7, position=pd) +
geom_point(size=1.2, position=pd) +
#   ggtitle("f=0.202, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0178, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0039, consider effect size of risk haplotypes, TRAP") +
labs(x="odds ratio r") +
scale_y_continuous(limits=c(0,1)) +
theme_gray(base_size = 20) +
theme(legend.position="bottom", panel.background = element_rect(fill = 'grey85')) +
scale_color_manual(values=cbbPalette)
View(result.plot)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#check power using true, imputed founder carrier, minimum offspring carrier
#three versions -- command and rare and super rare #2 for common, 7 for rare, 39 for super rare
result <- read.csv("2016-02-16 power comparison using number of affected in 2g.2a.2u.csv", header=T)
result <- result %>% gather(key="method", value="p.value", 9:15)
result.plot <- result %>% group_by(f, risk.variant.id, risk.haplo.f, r, method) %>%
summarise(n=n(), power=mean(p.value<2.5*10^-6, na.rm=T))
result.plot$risk.haplo.f <- factor(result.plot$risk.haplo.f, labels=c("f=0.01","f=0.05","f=0.20"))
result.plot$method
level(factor(result.plot$method))
levels(factor(result.plot$method))
result.plot$method <- factor(result.plot$method, levels=c("result.trap", "result.trafic.ext", "result.pedgene.vc",
"result.pedgene.burden","result.fbskat.vc","result.fbskat.burden","result.cc"),
labels = c("TRAP", "TRAFIC_EXT", "Pedgene.vc", "Pedgene", "FB-SKAT.vc", "FB-SKAT","CC"))
result.plot$method
#figure 1
pd <- position_dodge(0.0)
filter(result.plot, !grepl("vc", method)) %>% ggplot(aes(x=r, y=power, ymax=max(power), group=method, col=method)) +
#   geom_point(size=3, alpha=1) +
facet_wrap(~risk.haplo.f, ncol=3, scale="free_x") +
geom_line(size=1.2, alpha=0.7, position=pd) +
geom_point(size=1.2, position=pd) +
#   ggtitle("f=0.202, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0178, consider effect size of risk haplotypes, TRAP") +
#   ggtitle("f=0.0039, consider effect size of risk haplotypes, TRAP") +
labs(x="odds ratio r") +
scale_y_continuous(limits=c(0,1)) +
theme_gray(base_size = 20) +
theme(legend.position="bottom", panel.background = element_rect(fill = 'grey85')) +
scale_color_manual(values=cbbPalette)
p_dis=0.10
n_family=1000
family_strct="2g.3a.1u" #2g.3a.1u, 2g.4a.1u
f=0.01
r=1
setwd("C:/Users/khlin/Dropbox/Documents/GSRA/2013-10-31 Project 3 -- Extension to families data/writing")
#need to take in parameter
## passed in from the command prompt.
parseCommandArgs()
## Will disply the default values on the first run,
print(seed)
print(n_rep)
print(r)
print(n_family) #number of family
print(p_dis) #prevelance
# print(risk.variant)
print(family_strct)
print(f) #snps with f to consider
##1. read in cosi haplotype
#import the haplotypes generated by cosi
haplotype <- read.table("out_100k_10k_1kb.hap-1", header=F)
colnames(haplotype) <- c("HAP", "CHROM", paste("SNP", 1:(ncol(haplotype)-2), sep=""))
snp <-read.table("out_100k_10k_1kb.pos-1", header=T)
#make allele 1 is the minor allele, 2 is the common allele
temp.idx <- snp$FREQ1 > snp$FREQ2
temp.freq <- snp$FREQ2
snp$FREQ2[temp.idx] <- snp$FREQ1[temp.idx]
snp$FREQ1[temp.idx] <- temp.freq[temp.idx]
#also change the genotype file
haplotype[,which(temp.idx==T)+2] <- 3 - haplotype[,which(temp.idx==T)+2]
n_snp <- nrow(snp)
##2. gives structure and
family_strct_ped <- select_family_strct(family_strct)
##3.load library for pedgene and fbat_ext
.libPaths(c("/net/frodo/home/khlin/R/x86_64-pc-linux-gnu-library/3.2/", .libPaths()))
library(pedgene)
library(methods)
library(SKAT)
n_cc <- length(family_strct_ped$person)/2*n_family
##4. effect size
# risk.variant.id <- c(5,15,16,19,20,27,31,35,43,49)
(n_snp_f <- sum(snp$FREQ1<f))
(n_snp_f_causal <- round(n_snp_f*0.1)) #10 percent of snp with maf < f are causal
# risk.variant.id <<- sort(sample(which(0.0001<snp$FREQ1 & snp$FREQ1<f), round(n_snp_f_causal)))
# risk.haplo.id <- which(apply(2-as.matrix(haplotype[, risk.variant.id+2]), 1, sum)>0)
risk.variant.id <- switch(as.character(f),
"0.01"=c(4,37,38),
"0.05"=c(12,20,37,44),
"0.2"=c(1,4,22,26)
)
risk.haplo.f <<- mean(apply(2-as.matrix(haplotype[, risk.variant.id+2]), 1, sum)>0) #carrier haplotype frequency
cat("risk.haplo.f = ", risk.haplo.f, "\n")
Beta <- rep(0, length.out=50)
Beta[risk.variant.id] <- log(r) #effect size of OR=2
source('C:/Users/khlin/Dropbox/Documents/GSRA/2013-10-31 Project 3 -- Extension to families data/function.r', encoding = 'UTF-8', echo=TRUE)
#need to take in parameter
## passed in from the command prompt.
parseCommandArgs()
## Will disply the default values on the first run,
print(seed)
print(n_rep)
print(r)
print(n_family) #number of family
print(p_dis) #prevelance
# print(risk.variant)
print(family_strct)
print(f) #snps with f to consider
##1. read in cosi haplotype
#import the haplotypes generated by cosi
haplotype <- read.table("out_100k_10k_1kb.hap-1", header=F)
colnames(haplotype) <- c("HAP", "CHROM", paste("SNP", 1:(ncol(haplotype)-2), sep=""))
snp <-read.table("out_100k_10k_1kb.pos-1", header=T)
#make allele 1 is the minor allele, 2 is the common allele
temp.idx <- snp$FREQ1 > snp$FREQ2
temp.freq <- snp$FREQ2
snp$FREQ2[temp.idx] <- snp$FREQ1[temp.idx]
snp$FREQ1[temp.idx] <- temp.freq[temp.idx]
#also change the genotype file
haplotype[,which(temp.idx==T)+2] <- 3 - haplotype[,which(temp.idx==T)+2]
n_snp <- nrow(snp)
##2. gives structure and
family_strct_ped <- select_family_strct(family_strct)
##3.load library for pedgene and fbat_ext
.libPaths(c("/net/frodo/home/khlin/R/x86_64-pc-linux-gnu-library/3.2/", .libPaths()))
library(pedgene)
library(methods)
library(SKAT)
n_cc <- length(family_strct_ped$person)/2*n_family
##4. effect size
# risk.variant.id <- c(5,15,16,19,20,27,31,35,43,49)
(n_snp_f <- sum(snp$FREQ1<f))
(n_snp_f_causal <- round(n_snp_f*0.1)) #10 percent of snp with maf < f are causal
# risk.variant.id <<- sort(sample(which(0.0001<snp$FREQ1 & snp$FREQ1<f), round(n_snp_f_causal)))
# risk.haplo.id <- which(apply(2-as.matrix(haplotype[, risk.variant.id+2]), 1, sum)>0)
risk.variant.id <- switch(as.character(f),
"0.01"=c(4,37,38),
"0.05"=c(12,20,37,44),
"0.2"=c(1,4,22,26)
)
risk.haplo.f <<- mean(apply(2-as.matrix(haplotype[, risk.variant.id+2]), 1, sum)>0) #carrier haplotype frequency
cat("risk.haplo.f = ", risk.haplo.f, "\n")
Beta <- rep(0, length.out=50)
Beta[risk.variant.id] <- log(r) #effect size of OR=2
system.time({gene_family_pe(family_strct=family_strct_ped, n_family=n_family, p_dis=p_dis, Beta=Beta, exact_affected = F) })
system.time({gene_family_pe(family_strct=family_strct_ped, n_family=n_family, p_dis=0.05, Beta=Beta, exact_affected = F) })
